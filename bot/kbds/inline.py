from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def condition_kbds(skin_id: str):
    builder = InlineKeyboardBuilder()
    #'üü©'
    #'üü¶'
    #'üü®'
    #'üüß'
    #'üü•'
    conditions = {
        '–ü—Ä—è–º–æ —Å –∑–∞–≤–æ–¥–∞': 'Factory New',
        '–ù–µ–º–Ω–æ–≥–æ –ø–æ–Ω–æ—à–µ–Ω–Ω–æ–µ': 'Minimal Wear',
        '–ü–æ—Å–ª–µ –ø–æ–ª–µ–≤—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π': 'Field-Tested',
        '–ü–æ–Ω–æ—à–µ–Ω–Ω–æ–µ': 'Well-Worn',
        '–ó–∞–∫–∞–ª—ë–Ω–Ω–æ–µ –≤ –±–æ—è—Ö': 'Battle-Scarred',
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for name, condition in conditions.items():
        builder.button(
            text=name,
            callback_data=f"skincalldata|{skin_id}|{condition}"
        )

    builder.adjust(1)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É ¬´–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å¬ª
    builder.row(
        InlineKeyboardButton(
            text="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å üóÑÔ∏è",
            callback_data="inventory_0"
        )
    )

    return builder.as_markup()


def create_inline_kb(data: dict[str, str],row1=1,row2=1):
    inline_kb = InlineKeyboardBuilder()
    for text, callback in data.items():
        inline_kb.add(InlineKeyboardButton(text=text, callback_data=callback))
    inline_kb.adjust(row1,row2)

    return inline_kb.as_markup()
