version: '3.8'
services:
  #  db:
  #    image: postgres:13
  #    environment:
  #      POSTGRES_DB: ${POSTGRES_DB}
  #      POSTGRES_USER: ${POSTGRES_USER}
  #      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #    volumes:
  #      - postgres_data:/var/lib/postgresql/data
  django:
    build:
      context: .
      dockerfile: Dockerfile-django
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./skinsprice:/django_app
    #        - media:/app/media
    ports:
      - "8000:8000"
    #      depends_on:
    #        - db
    env_file: .env
  #      environment:
  #        - DEBUG=1
  #        - DJANGO_SETTINGS_MODULE=taskmanager.settings


  bot:
    build:
      context: .
      dockerfile: Dockerfile-bot
    container_name: bot
    volumes:
      - ./bot:/bot_app
    working_dir: /bot_app

    env_file: .env
    #    depends_on:
    #      - db

  #volumes:
  #  postgres_data:
  #  media:
  celery:
    build:
      context: .
      dockerfile: Dockerfile-django
    #    command: bash -c "celery -A taskmanager purge --force  && celery -A taskmanager worker --loglevel=info"
    command: celery -A skinsprice worker --loglevel=info
    depends_on:
      - redis
    volumes:
      - ./skinsprice:/django_app
    env_file: .env

    restart: always

  beat:
    build:
      context: .
      dockerfile: Dockerfile-django
    command: celery -A skinsprice beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - django
    volumes:
      - ./skinsprice:/django_app
    env_file: .env
    restart: always


  redis:
    image: redis:latest
    #    command: redis-server --requirepass kedovpn2024  # Устанавливаем пароль
    volumes:
      - ./redis_data:/data
    restart: always



